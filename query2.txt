GROUP BY

1. Contare quanti iscritti ci sono stati ogni anno
2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
3. Calcolare la media dei voti di ogni appello d'esame
4. Contare quanti corsi di laurea ci sono per ogni dipartimento

1.
SELECT COUNT(`id`), YEAR(enrolment_date) FROM `students` GROUP BY YEAR(`enrolment_date`);

2.
SELECT COUNT(`id`), office_address FROM `teachers` GROUP BY `office_address`;

3.
SELECT exam_id , ROUND(AVG(`vote`), 0) as `media` FROM `exam_student` GROUP BY exam_id;

4.
SELECT COUNT(`id`), `department_id` FROM `degrees` GROUP BY `department_id`;

JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome
5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami

1.
SELECT concat(students.name, ' ', students.surname) as fullname, degrees.name FROM students JOIN degrees ON students.degree_id = degrees.id WHERE degrees.name = "Corso di laurea in economia"

2.
SELECT degrees.name FROM departments JOIN degrees ON departments.id = degrees.department_id AND degrees.department_id = departments.id WHERE degrees.level = "magistrale" AND departments.name = "Dipartimento di neuroscienze";

3.
SELECT courses.name FROM `courses` JOIN `course_teacher` ON courses.id = course_teacher.course_id JOIN `teachers` ON course_teacher.teacher_id = `teachers`.`id` WHERE teachers.id = 44;
Per nome:
SELECT courses.name FROM `courses` JOIN `course_teacher` ON courses.id = course_teacher.course_id JOIN `teachers` ON course_teacher.teacher_id = `teachers`.`id` WHERE teachers.name = "Fulvio" AND teachers.surname = "Amato";

4.
SELECT students.surname, students.name, degrees.name, departments.name FROM students JOIN degrees ON students.degree_id = degrees.id JOIN departments ON departments.id = degrees.department_id ORDER BY `students`.`surname`, students.name ASC;

5.
SELECT degrees.name, courses.name, teachers.name, teachers.surname FROM `courses` JOIN degrees ON degrees.id = courses.degree_id JOIN course_teacher ON course_teacher.course_id = courses.id JOIN teachers ON teachers.id = course_teacher.teacher_id ORDER BY degrees.name, courses.name;

6. (70 risultati)
SELECT teachers.name, teachers.surname FROM `courses` JOIN degrees ON degrees.id = courses.degree_id JOIN departments ON departments.id = degrees.department_id JOIN course_teacher ON course_teacher.course_id = courses.id JOIN teachers ON teachers.id = course_teacher.teacher_id WHERE departments.id = "5";
con Distinct:
SELECT DISTINCT teachers.name, teachers.surname FROM `courses` JOIN degrees ON degrees.id = courses.degree_id JOIN departments ON departments.id = degrees.department_id JOIN course_teacher ON course_teacher.course_id = courses.id JOIN teachers ON teachers.id = course_teacher.teacher_id WHERE departments.id = "5";

6. Group BY (54 come da richiesta)
SELECT teachers.name, teachers.surname, teachers.id FROM `courses` JOIN degrees ON degrees.id = courses.degree_id JOIN departments ON departments.id = degrees.department_id JOIN course_teacher ON course_teacher.course_id = courses.id JOIN teachers ON teachers.id = course_teacher.teacher_id WHERE departments.id = "5" GROUP BY teachers.id

7.
SELECT CONCAT(students.surname, " ", students.name) AS studente, students.id, COUNT(courses.id) as tentativi_esame, courses.name as corso FROM students JOIN exam_student ON students.id = exam_student.student_id JOIN exams ON exams.id = exam_student.exam_id JOIN courses ON exams.course_id = courses.id GROUP BY students.id, students.surname, students.name, courses.name;

con HAVING:
SELECT CONCAT(students.surname, " ", students.name) AS studente, students.registration_number as matricola, courses.id AS id_corso, courses.name as corso, COUNT(courses.id - 1) as tentativi_esame, MAX(exam_student.vote) as voto FROM students JOIN exam_student ON students.id = exam_student.student_id JOIN exams ON exams.id = exam_student.exam_id JOIN courses ON exams.course_id = courses.id GROUP BY students.registration_number, students.surname, students.name, courses.name, courses.id HAVING voto > 17 ORDER BY `studente` ASC;